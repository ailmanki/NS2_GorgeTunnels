-- BuildTechData Code used from Nin's Hades Device https://steamcommunity.com/sharedfiles/filedetails/?id=873978863
local oldBuildTechData = BuildTechData
function BuildTechData()
	local techDataTable = oldBuildTechData()
	table.insert(techDataTable, {
		[kTechDataId] = kTechId.GorgeCrag,
		[kTechDataCategory] = kTechId.Gorge,
		[kTechDataAllowConsumeDrop] = false,
		[kTechDataMaxAmount] = 3,
		[kTechDataBioMass] = kCragBiomass,
		[kTechDataSupply] = kCragSupply,
		[kTechDataHint] = "CRAG_HINT",
		[kTechDataGhostModelClass] = "AlienGhostModel",
		[kTechDataMapName] = Crag.kMapName,
		[kTechDataDisplayName] = "CRAG",
		[kTechDataCostKey] = kGorgeCragCost,
		[kTechDataRequiresInfestation] = true,
		[kTechDataHotkey] = Move.C,
		[kTechDataBuildTime] = kCragBuildTime,
		[kTechDataModel] = Crag.kModelName,
		[kTechDataMaxHealth] = kCragHealth,
		[kTechDataMaxArmor] = kCragArmor,
		[kTechDataInitialEnergy] = kCragInitialEnergy,
		[kTechDataMaxEnergy] = kCragMaxEnergy,
		[kTechDataPointValue] = kCragPointValue,
		[kVisualRange] = Crag.kHealRadius,
		[kTechDataTooltipInfo] = "CRAG_TOOLTIP",
		[kTechDataGrows] = true,
	})
	
	table.insert(techDataTable, {
		[kTechDataId] = kTechId.GorgeWhip,
		[kTechDataCategory] = kTechId.Gorge,
		[kTechDataBioMass] = kWhipBiomass,
		[kTechDataSupply] = kWhipSupply,
		[kTechDataAllowConsumeDrop] = false,
		[kTechDataHint] = "WHIP_HINT",
		[kTechDataGhostModelClass] = "AlienGhostModel",
		[kTechDataMapName] = Whip.kMapName,
		[kTechDataDisplayName] = "WHIP",
		[kTechDataCostKey] = kGorgeWhipCost,
		[kTechDataRequiresInfestation] = true,
		[kTechDataHotkey] = Move.W,
		[kTechDataBuildTime] = kWhipBuildTime,
		[kTechDataModel] = Whip.kModelName,
		[kTechDataMaxHealth] = kWhipHealth,
		[kTechDataMaxArmor] = kWhipArmor,
		[kTechDataDamageType] = kDamageType.Structural,
		[kTechDataInitialEnergy] = kWhipInitialEnergy,
		[kTechDataMaxEnergy] = kWhipMaxEnergy,
		[kVisualRange] = Whip.kRange,
		[kTechDataPointValue] = kWhipPointValue,
		[kTechDataTooltipInfo] = "WHIP_TOOLTIP",
		[kTechDataGrows] = true,
		[kTechDataMaxAmount] = 3,
		
	})
	
	table.insert(techDataTable, {
		[kTechDataId] = kTechId.GorgeShift,
		[kTechDataCategory] = kTechId.Gorge,
		[kTechDataAllowConsumeDrop] = false,
		[kTechDataMaxAmount] = 3,
		[kTechDataBioMass] = kShiftBiomass,
		[kTechDataSupply] = kShiftSupply,
		[kTechDataHint] = "SHIFT_HINT",
		[kTechDataGhostModelClass] = "AlienGhostModel",
		[kTechDataMapName] = Shift.kMapName,
		[kTechDataDisplayName] = "SHIFT",
		[kTechDataRequiresInfestation] = true,
		[kTechDataCostKey] = kGorgeShiftCost,
		[kTechDataHotkey] = Move.S,
		[kTechDataBuildTime] = kShiftBuildTime,
		[kTechDataModel] = Shift.kModelName,
		[kTechDataMaxHealth] = kShiftHealth,
		[kTechDataMaxArmor] = kShiftArmor,
		[kTechDataInitialEnergy] = kShiftInitialEnergy,
		[kTechDataMaxEnergy] = kShiftMaxEnergy,
		[kTechDataPointValue] = kShiftPointValue,
		[kVisualRange] = {
			kEchoRange,
			kEnergizeRange
		},
		[kTechDataTooltipInfo] = "SHIFT_TOOLTIP",
		[kTechDataGrows] = true,
	})
	
	table.insert(techDataTable, {
		[kTechDataId] = kTechId.GorgeShade,
		[kTechDataCategory] = kTechId.Gorge,
		[kTechDataAllowConsumeDrop] = false,
		[kTechDataMaxAmount] = 3,
		[kTechDataBioMass] = kShadeBiomass,
		[kTechDataSupply] = kShadeSupply,
		[kTechDataHint] = "SHADE_HINT",
		[kTechDataGhostModelClass] = "AlienGhostModel",
		[kTechDataMapName] = Shade.kMapName,
		[kTechDataDisplayName] = "SHADE",
		[kTechDataCostKey] = kGorgeShadeCost,
		[kTechDataRequiresInfestation] = true,
		[kTechDataBuildTime] = kShadeBuildTime,
		[kTechDataHotkey] = Move.D,
		[kTechDataModel] = Shade.kModelName,
		[kTechDataMaxHealth] = kShadeHealth,
		[kTechDataMaxArmor] = kShadeArmor,
		[kTechDataInitialEnergy] = kShadeInitialEnergy,
		[kTechDataMaxEnergy] = kShadeMaxEnergy,
		[kTechDataPointValue] = kShadePointValue,
		[kVisualRange] = Shade.kCloakRadius,
		[kTechDataMaxExtents] = Vector(1, 1.3, .4),
		[kTechDataTooltipInfo] = "SHADE_TOOLTIP",
		[kTechDataGrows] = true,
	})
	
	table.insert(techDataTable, {
		[kTechDataId] = kTechId.GorgeTunnel,
		[kTechDataCategory] = kTechId.Gorge,
		[kTechDataMaxExtents] = Vector(1.2, 1.2, 1.2),
		[kTechDataTooltipInfo] = "GORGE_TUNNEL_TOOLTIP",
		[kTechDataGhostModelClass] = "AlienGhostModel",
		[kTechDataAllowConsumeDrop] = true,
		[kTechDataAllowStacking] = false,
		[kTechDataMaxAmount] = kNumGorgeTunnels,
		[kTechDataMapName] = TunnelEntrance.kMapName,
		[kTechDataDisplayName] = "TUNNEL_ENTRANCE",
		[kTechDataHint] = "TUNNEL_ENTRANCE_HINT",
		[kTechDataCostKey] = kGorgeTunnelCost,
		[kTechDataMaxHealth] = kTunnelEntranceHealth,
		[kTechDataMaxArmor] = kTunnelEntranceArmor,
		[kTechDataBuildTime] = kGorgeTunnelBuildTime,
		[kTechDataModel] = TunnelEntrance.kModelName,
		[kTechDataRequiresInfestation] = false,
		[kTechDataPointValue] = kTunnelEntrancePointValue,
	})
	
	table.insert(techDataTable, {
		[kTechDataId] = kTechId.GorgeTunnelTech,
		[kTechDataDisplayName] = "GORGE_TUNNEL_TECH",
		[kTechDataTooltipInfo] = "GORGE_TUNNEL_TECH_TOOLTIP",
		[kTechDataCostKey] = kGorgeTunnelResearchCost,
		[kTechDataResearchTimeKey] = kGorgeTunnelResearchTime,
	})
	return techDataTable
end